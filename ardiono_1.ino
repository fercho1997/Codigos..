
//////////////////////////////////// librerias para descargar ////////////////////////////////////////////

#include <Adafruit_Fingerprint.h>
#include <SoftwareSerial.h>
#include <Adafruit_GFX.h>  
#include <Adafruit_SSD1306.h>  
#include <SPI.h>
#include <Wire.h>
#include <Servo.h>
#include <Keypad.h>
Servo controlador; 
Adafruit_SSD1306 display;

///////////////////////////////////////////// variables variables que vamos a utilizar ////////////////////////

int bot_abrir =12;                /// pulsador para habrir puerta
int getFingerprintIDez();         // va acompañado con la id del lector de huellas 
char pulsacion;                   // almacena la tecla pulsada
int  contador = 1;                // cuenta el nivel del menu en el que se esta
bool inicio = false;              // no se envía al menú principal
int getFingerprintIDez();         // va acompañado con la id del lector de huellas
bool reconocimiento = false;
char CLAVE[5];                    // almacena en un array 4 digitos ingresados
char CLAVE_MAESTRA[5] = "1111";   // almacena en un array la contraseña inicial
byte INDICE = 0;    
int val=0;                        // no sirve para identificar si está en 1 o 0
SoftwareSerial mySerial(10,11);   // pin 10 amarillo y PIN 11 blanco 

Adafruit_Fingerprint finger = Adafruit_Fingerprint(&mySerial);



const byte ROWS = 4;  //Cuatro Filas
const byte COLS = 4;  //Cuatro Columnas 
char keys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};
byte rowPins[ROWS] = {9,8,7,6}; //Puntos de conexion del teclado al arduino FILAS
byte colPins[COLS] = {5,4,3,2}; //Puntos de conexion del teclado al arduino COLUMNAS
Keypad Teclado1 = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS ); //Configura el teclado


///////// IMAGEN NUEMRO 1 PUERTA //////////////////////

static const uint8_t ico [] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xa1, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x1d, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x0f, 0xfd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xef, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9f, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x04, 0xff, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x85, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xcf, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0xcf, 0x8d, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 
  0xf4, 0xcf, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x1e, 0x00, 0x3f, 0xc4, 0xcf, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0x88, 0x7e, 0x44, 0xcf, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x83, 0xcb, 0xfc, 0x44, 0xcf, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x1f, 0xdf, 0xc4, 
  0x44, 0xcf, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x70, 0x7e, 0xfc, 0xc4, 0x44, 0xcf, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x0f, 0x83, 0xf0, 0xec, 0x44, 0x44, 0xcf, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x3e, 0x04, 0xcc, 0x44, 0x44, 0xcf, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc1, 0xf8, 0x3e, 0xcc, 0x44, 
  0x44, 0xcf, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf7, 
  0xc1, 0xc2, 0xcc, 0x44, 0x44, 0xcf, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0xff, 0x07, 0x02, 0xcc, 0x44, 0x44, 0xcf, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x38, 0x02, 0xcc, 0x44, 0x44, 0xcf, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf3, 0xe1, 0x52, 0xcc, 0x44, 
  0x44, 0xcf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2d, 0xf3, 
  0x01, 0x82, 0xcc, 0x44, 0x44, 0xcf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x21, 0xf2, 0x2d, 0x82, 0xfc, 0x44, 0x44, 0xcf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xad, 0xf2, 0x78, 0x1e, 0xfc, 0x4c, 0x44, 0xdf, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xb5, 0xf2, 0x50, 0x7e, 0xfc, 0x4c, 
  0x44, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x61, 0xf2, 
  0x03, 0x80, 0xfc, 0xc4, 0x47, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xb5, 0xa7, 0xf2, 0x0c, 0x00, 0xcc, 0xc4, 0x6f, 0xcf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x2d, 0xf3, 0x70, 0x00, 0xcc, 0xc4, 0xff, 0x8f, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb4, 0x6f, 0xf3, 0x80, 0x00, 0xcc, 0xcf, 
  0xfc, 0x03, 0xbf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd5, 0xff, 0xf0, 
  0x00, 0x00, 0xcc, 0xff, 0x84, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x87, 0xfe, 0x70, 0x00, 0x00, 0xcc, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x9f, 0xf9, 0xe0, 0x00, 0x00, 0xcf, 0xf8, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbf, 0xcf, 0x80, 0x00, 0x00, 0xdf, 0x80, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x3e, 0x00, 
  0x00, 0x00, 0xfc, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xfc, 0xf0, 0x00, 0x00, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


///////// IMAGEN NUEMRO 2 PUERTA //////////////////////

static const uint8_t icon [] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xa1, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x1d, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x0f, 0xfd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xef, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x11, 0x08, 0x8f, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x62, 0x11, 0x08, 0x9f, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 
  0xff, 0xff, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x0c, 0x22, 0x11, 0x8c, 0xcf, 0x85, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x22, 0x11, 0x8c, 0xcf, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x22, 0x11, 0x8c, 0xcf, 0x8d, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x22, 0x11, 
  0x8c, 0xcf, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x1e, 0x22, 0x11, 0x8c, 0xcf, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xa2, 0x11, 0x8c, 0xcf, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x83, 0xe2, 0x11, 0x8c, 0xcf, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x1f, 0xe2, 0x11, 
  0x8c, 0xcf, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x70, 0x7e, 0xe2, 0x11, 0x8c, 0xcf, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x0f, 0x83, 0xf0, 0xe2, 0x11, 0x8c, 0xcf, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x3e, 0x04, 0xe2, 0x11, 0x8c, 0xcf, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc1, 0xf8, 0x3e, 0xf2, 0x11, 
  0x8c, 0xcf, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf7, 
  0xc1, 0xc2, 0xe2, 0x11, 0x8c, 0xcf, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0xff, 0x07, 0x02, 0xe2, 0x11, 0x8c, 0xcf, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x38, 0x02, 0xe2, 0x19, 0x8c, 0xcf, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf3, 0xe1, 0x52, 0xe2, 0x11, 
  0x8c, 0xcf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2d, 0xf3, 
  0x01, 0x82, 0xe2, 0x11, 0x8c, 0xcf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x21, 0xf2, 0x2d, 0x82, 0xe2, 0x11, 0x8c, 0xcf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xad, 0xf2, 0x78, 0x1e, 0xf3, 0x99, 0x8c, 0xdf, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xb5, 0xf2, 0x50, 0x7e, 0xff, 0xff, 
  0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x61, 0xf2, 
  0x03, 0x80, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xb5, 0xa7, 0xf2, 0x0c, 0x00, 0xe2, 0x11, 0x08, 0x8f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x2d, 0xf3, 0x70, 0x00, 0xc0, 0x01, 0x08, 0x0f, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb4, 0x6f, 0xf3, 0x80, 0x00, 0xc0, 0x00, 
  0x00, 0x03, 0xbf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd5, 0xff, 0xf0, 
  0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x87, 0xfe, 0x70, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x9f, 0xf9, 0xe0, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbf, 0xcf, 0x80, 0x00, 0x00, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x3e, 0x00, 
  0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xfc, 0xf0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

 
///////// IMAGEN NUEMRO 1 PUERTA //////////////////////

static const uint8_t icono [] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x10, 0x00, 0x01, 0xa1, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x3f, 0xf1, 0x00, 0x0e, 0x1d, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x23, 0xff, 
  0x08, 0x0f, 0xfd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x06, 0x21, 0x3f, 0xe8, 0x8f, 0xef, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x21, 0x19, 0xfe, 0x8f, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x21, 0x11, 0x9f, 0xdf, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x21, 0x11, 
  0x8d, 0xff, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x06, 0x21, 0x11, 0x8c, 0xff, 0x85, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x21, 0x11, 0x8c, 0xcf, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x21, 0x11, 0x8c, 0xcf, 0x8d, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe1, 0x11, 
  0x8c, 0xcf, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x1f, 0xe1, 0x11, 0x8c, 0xcf, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xe1, 0x11, 0x8c, 0xcf, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x83, 0xe1, 0x11, 0x8c, 0xcf, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x1f, 0xe1, 0x11, 
  0x8c, 0xcf, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x70, 0x7e, 0xe1, 0x11, 0x8c, 0xcf, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x0f, 0x83, 0xf0, 0xe1, 0x11, 0x8c, 0xcf, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x3e, 0x04, 0xe1, 0x11, 0x8c, 0xcf, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc1, 0xf8, 0x3e, 0xf1, 0x11, 
  0x8c, 0xcf, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf7, 
  0xc1, 0xc2, 0xf9, 0x11, 0x8c, 0xcf, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0xff, 0x07, 0x02, 0xdf, 0xd1, 0x8c, 0xcf, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x38, 0x02, 0xc1, 0xff, 0x8c, 0xcf, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf3, 0xe1, 0x52, 0xc0, 0x3f, 
  0xec, 0xcf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2d, 0xf3, 
  0x01, 0x82, 0xc0, 0x13, 0xfc, 0xcf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x21, 0xf2, 0x2d, 0x82, 0xc0, 0x01, 0x0f, 0xdf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xad, 0xf2, 0x78, 0x1e, 0xc0, 0x01, 0x09, 0xff, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xb5, 0xf2, 0x50, 0x7e, 0xc0, 0x00, 
  0x08, 0x9f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x61, 0xf2, 
  0x03, 0x80, 0xc0, 0x00, 0x00, 0x8f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xb5, 0xa7, 0xf2, 0x0c, 0x00, 0xc0, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x2d, 0xf3, 0x70, 0x00, 0xc0, 0x00, 0x00, 0x0f, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb4, 0x6f, 0xf3, 0x80, 0x00, 0xc0, 0x00, 
  0x00, 0x03, 0xbf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd5, 0xff, 0xf0, 
  0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x87, 0xfe, 0x70, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x9f, 0xf9, 0xe0, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbf, 0xcf, 0x80, 0x00, 0x00, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x3e, 0x00, 
  0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xfc, 0xf0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

  
///////// IMAGEN NUEMRO 1 PUERTA //////////////////////

static const uint8_t iconos [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf1, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x79, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0e, 0x4f, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x4f, 0xa0, 0x01, 0xa1, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x49, 0xf0, 0x0e, 0x1d, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x49, 
  0xfc, 0x4f, 0xfd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0e, 0xc9, 0x9e, 0x4f, 0xef, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc9, 0x93, 0xcf, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc9, 0x93, 0xff, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc9, 
  0x92, 0x7f, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0xc9, 0x92, 0x7f, 0x85, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0xc9, 0x92, 0x6f, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x49, 0x92, 0x6f, 0x8d, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x49, 
  0x92, 0x6f, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x1e, 0x0e, 0x49, 0x92, 0x6f, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0x8e, 0x49, 0x92, 0x6f, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x83, 0xce, 0xc9, 0x92, 0x6f, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x1f, 0xc3, 0xc9, 
  0x92, 0x6f, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x70, 0x7e, 0xc0, 0xf9, 0x92, 0x6f, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x0f, 0x83, 0xf0, 0xc0, 0xf9, 0x92, 0x6f, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x3e, 0x04, 0xc0, 0x1f, 0x92, 0x6f, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc1, 0xf8, 0x3e, 0xc0, 0x0f, 
  0x92, 0x6f, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf7, 
  0xc1, 0xc2, 0xc0, 0x01, 0xf2, 0x6f, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0xff, 0x07, 0x02, 0xc0, 0x01, 0x72, 0x6f, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x38, 0x02, 0xc0, 0x01, 0x3e, 0x6f, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf3, 0xe1, 0x52, 0xc0, 0x01, 
  0x1e, 0x6f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2d, 0xf3, 
  0x01, 0x82, 0xc0, 0x00, 0x07, 0xef, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x21, 0xf2, 0x2d, 0x82, 0xc0, 0x00, 0x02, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xad, 0xf2, 0x78, 0x1e, 0xc0, 0x00, 0x00, 0x7f, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xb5, 0xf2, 0x50, 0x7e, 0xc0, 0x00, 
  0x00, 0x5f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x61, 0xf2, 
  0x03, 0x80, 0xc0, 0x00, 0x00, 0x4f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xb5, 0xa7, 0xf2, 0x0c, 0x00, 0xc0, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x2d, 0xf3, 0x70, 0x00, 0xc0, 0x00, 0x00, 0x0f, 0x8f, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb4, 0x6f, 0xf3, 0x80, 0x00, 0xc0, 0x00, 
  0x00, 0x03, 0xbf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd5, 0xff, 0xf0, 
  0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x87, 0xfe, 0x70, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x9f, 0xf9, 0xe0, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbf, 0xcf, 0x80, 0x00, 0x00, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x3e, 0x00, 
  0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xfc, 0xf0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};



///////////// IMAGEN DE PROHIBIDO ENTRAR ///////////////// 

static const uint8_t iconosh [] PROGMEM = {
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0xf9, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x3e, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x3f, 0x80, 0x00, 0x00, 
  0x00, 0x00, 0x3c, 0x00, 0x7b, 0x80, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x71, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x70, 0x00, 0xe1, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x70, 0x01, 0xc0, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x70, 0x03, 0xc0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x70, 0x07, 0x80, 0xe0, 0x00, 0x00, 
  0x00, 0x00, 0x60, 0x0f, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x60, 0x1e, 0x00, 0xe0, 0x00, 0x00, 
  0x00, 0x00, 0x70, 0x1c, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x70, 0x38, 0x00, 0xe0, 0x00, 0x00, 
  0x00, 0x00, 0x70, 0x78, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x38, 0xf0, 0x01, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x39, 0xe0, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x03, 0x80, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0x80, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x1f, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0xc0, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xfc, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};




void setup () { 
  
 Serial.begin(9600);                         // inicializa comunicacion serie
  delay(100);                                // Este retraso es necesario para que la pantalla se inicialice
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C); // Inicializar la pantalla con la dirección I2C de 0x3C
  display.clearDisplay();                    // limpiar pantalla
  display.setTextColor(WHITE);               // color
  display.setRotation(0);                    // tamaño de letra
  display.setTextWrap(false);  
  display.dim(0);                            // Establecer brillo (0 es máximo y 1 es un poco tenue)
  
pinMode(12,INPUT);                           // pulsador 
controlador.attach(13);                      // servomotor 




 
  ////////////////// comunicacion con el lector de huellas //////////
  
  finger.begin(57600);
  delay(5);
  if (finger.verifyPassword()) {
    Serial.println("Sensor de huellas digitales encontrado!");  // palabras que salen en la pantalla del monitor serial 
      display.clearDisplay();                                  //  limpiar pantalla
 display.setTextSize(0);                                        // tamaño de letra
     display.setCursor(0,10);                                   // (x,y)
  display.println("Sensor encontrado ");                        // palabras que salen en la pantalla oled
     delay(3000);
 display.display();                                             // Imprime todo lo que configuramos previamente
  inicio=true;
  
  } else {
    Serial.println("No encontré el sensor de huellas digitales :(");   // palabras que salen en la pantalla del monitor serial 
 display.clearDisplay();                                               // limpiar pantalla
 display.setTextSize(0);                                               // tamaño de letra
     display.setCursor(0,10);                                          // (x,y)
  display.println("No encontré el sensor de huellas digitales :(");    // palabras que salen en la pantalla oled
   display.display();                                                  // Imprime todo lo que configuramos previamente
 while (1) { delay(1);}
  }
}

  

////////////////////////// Void loop() ///////////////////////

void loop(){
  
 pulsacion = Teclado1.getKey() ;                  // Lee la tecla pulsada

 if (inicio==true)
{ Serial.println("menu");                         // palabras que salen en la pantalla del monitor serial 
  display.clearDisplay();                         // limpiar pantalla
 delay(1000);
  display.setTextSize(0);                         // tamaño de letra
  display.setCursor(0, 0);                        // (x,y)
  display.println(F("Bienvenido :)"));            // palabras que salen en la pantalla oled
   display.setCursor(0, 8);                       // (x,y)
  display.println(F("Esperando Intruccion"));     // palabras que salen en la pantalla oled
  display.setCursor(0, 16);                       // (x,y)
  display.println(F("o Codigo:"));                // palabras que salen en la pantalla oled
 display.display();                               // Imprime todo lo que configuramos previamente
     delay(5000);
  inicio=false;
}
 if (pulsacion != NO_KEY) {      
 CLAVE[INDICE] = pulsacion;                        // almacena en array la tecla presionada
    INDICE++;                                      // incrementa indice en uno
     Serial.print(pulsacion );                     // palabras que salen en la pantalla del monitor serial 
           display.clearDisplay();                 // limpiar pantalla
      display.setTextSize(0);                      // tamaño de letra   
  display.print(pulsacion);                        // palabras que salen en la pantalla oled
  display.display();                               // Imprime todo lo que configuramos previamente
   }

    
  if(INDICE == 4)                                  // si ya se almacenaron los 4 digitos
  {
    if(!strcmp(CLAVE, CLAVE_MAESTRA))   {          // compara clave ingresada con clave maestra
       Serial.println(" Correcta");                // imprime en monitor serial que es correcta la clave
    display.setTextSize(2);                        // tamaño de letra
     display.setCursor(0,5);                       // (x,y)
  display.println("Correcta" );                    // palabras que salen en la pantalla oled
   display.display();                              // Imprime todo lo que configuramos previamente
    delay(2000) ;
    accion_1();                                    // escaneo de huellas 
     
    }else  {
      Serial.println(" Incorrecta");                // imprime en monitor serial que es incorrecta la clave
     display.clearDisplay();                        // limpiar pantalla
   display.setTextSize(3);                          // tamaño de letra
  display.setCursor(70, 5);                         // (x,y)
  display.println("NO");                            // palabras que salen en la pantalla oled
   display.drawBitmap(0,0,iconosh,60,30,WHITE);     // tamaño de la imagen y nombre de la imagen 
  display.display();                                // Imprime todo lo que configuramos previamente
  
    INDICE = 0;
    
  inicio=true;                                    // meregres al menu
  }
  
    INDICE = 0;
}

  if(pulsacion == 'C'){accion_2();}               //   cierra la puerta          
  val=digitalRead(12);                            // pulsador                  
if  ((val == HIGH)){                              //  si mi pulsador fue precionado 

accion_3();                                       // habrir puerta
} 

}


///////// Fin del void loop(), inician las Funciones///////////////

void accion_1(){ 

 
 
     getFingerprintID();   //7 llama la funcion de reconocimiento de huellas
   delay(2000);   

     getFingerprintID();   //7 llama la funcion de reconocimiento de huellas
   delay(1000);  

  getFingerprintIDez();   //7 llama la funcion de reconocimiento de huellas
  delay(1000);  

  inicio=true;            // meregres al menu
  
}

////////////////////////////// abrir puerta //////////////////////////////////
void accion_3(){ 
 
/////////////////////// imagen 1 ////////////////////

 controlador.write(90);                      // colocar servomotor a 90 grados
 display.clearDisplay();                     // limpiar pantalla
  display.setTextSize(2);                    // tamaño de letra
   display.setCursor(0, 2);                  // (x,y)
   display.println(F("abrir "));             // palabras que salen en la pantalla oled
display.drawBitmap(0,0,ico,160,40,WHITE);    // tamaño de la imagen y nombre de la imagen 
display.display();                           // Imprime todo lo que configuramos previamente
     delay(2000);

     
/////////////////////// imagen 2 ////////////////////

  display.clearDisplay();                      // limpiar pantalla
  display.setTextSize(2);                      // tamaño de letra
   display.setCursor(0, 2);                    // (x,y)
   display.println(F("abrir "));               // palabras que salen en la pantalla oled
display.drawBitmap(0,0,icon,160,40,WHITE);     // tamaño de la imagen y nombre de la imagen 
display.display();                             // Imprime todo lo que configuramos previamente
     delay(2000);

     
/////////////////////// imagen 3 ////////////////////

   display.clearDisplay();                       // limpiar pantalla
  display.setTextSize(2);                        // tamaño de letra
   display.setCursor(0, 2);                      // (x,y)
   display.println(F("abrir "));                 // palabras que salen en la pantalla oled
  display.drawBitmap(0,0,icono,160,40,WHITE);    // tamaño de la imagen y nombre de la imagen 
display.display();                               // Imprime todo lo que configuramos previamente
     delay(2000);


/////////////////////// imagen 4 ////////////////////

     display.clearDisplay();                     // limpiar pantalla
  display.setTextSize(2);                        // tamaño de letra
   display.setCursor(0, 2);                      // (x,y)
   display.println(F("abrir "));                 // palabras que salen en la pantalla oled
display.drawBitmap(0,0,iconos,160,40,WHITE);     // tamaño de la imagen y nombre de la imagen 
display.display();                               // Imprime todo lo que configuramos previamente
     delay(2000);


  inicio=true;
}





void accion_2(){ 
  

/////////////////////// imagen 4 ////////////////////

  controlador.write(0);                           // colocar servomotor a 90 grados
   display.clearDisplay();                        // limpiar pantalla
  display.setTextSize(2);                         // tamaño de letra
   display.setCursor(0, 2);                       // (x,y)
   display.println(F("Cerrar "));                 // palabras que salen en la pantalla oled
display.drawBitmap(0,0,iconos,160,40,WHITE);      // tamaño de la imagen y nombre de la imagen
display.display();                                // Imprime todo lo que configuramos previamente
     delay(2000);


/////////////////////// imagen 3 ////////////////////
     
      display.clearDisplay();                        // limpiar pantalla
  display.setTextSize(2);                            // tamaño de letra
   display.setCursor(0, 2);                          // (x,y)
   display.println(F("Cerrar "));                    // palabras que salen en la pantalla oled
  display.drawBitmap(0,0,icono,160,40,WHITE);        // tamaño de la imagen y nombre de la imagen
display.display();                                   // Imprime todo lo que configuramos previamente
     delay(2000);


/////////////////////// imagen 2 ////////////////////

      display.clearDisplay();                         // limpiar pantalla
  display.setTextSize(2);                            // tamaño de letra
   display.setCursor(0, 2);                          // (x,y)
   display.println(F("Cerrar "));                    // palabras que salen en la pantalla oled
display.drawBitmap(0,0,icon,160,40,WHITE);           // tamaño de la imagen y nombre de la imagen
display.display();                                   // Imprime todo lo que configuramos previamente
     delay(2000);


/////////////////////// imagen 1 ////////////////////

      display.clearDisplay();                        // // limpiar pantalla
  display.setTextSize(2);                            // tamaño de letra
   display.setCursor(0, 2);                          // (x,y)
   display.println(F("Cerrar "));                    // palabras que salen en la pantalla oled
display.drawBitmap(0,0,ico,160,40,WHITE);            // tamaño de la imagen y nombre de la imagen
display.display();                                   // Imprime todo lo que configuramos previamente
     delay(2000);

     
  inicio=true;

}









uint8_t getFingerprintID() {
  uint8_t p = finger.getImage();
  switch (p) {
    case FINGERPRINT_OK:
      Serial.println("Imagen tomada");
      break;
    case FINGERPRINT_NOFINGER:
    
      Serial.println("No se detecta  ningún dedo");   // palabras que salen en la pantalla del monitor serial
       display.clearDisplay();                       // limpiar pantalla
      display.clearDisplay();                        // limpiar pantalla
 display.setTextSize(1);                             // tamaño de letra
  display.setCursor(13,5);                           // (x,y)
  display.println(F(" No se detecta   "));           // palabras que salen en la pantalla oled
  display.setCursor(10, 15);                         // (x,y)
  display.println(F("   ningun dedo "));             // palabras que salen en la pantalla oled
    display.display();                               // Imprime todo lo que configuramos previamente
     delay(2000);
     
      return p;
    case FINGERPRINT_PACKETRECIEVEERR:
      Serial.println("Error de comunicación");

      return p;
    case FINGERPRINT_IMAGEFAIL:
      Serial.println("Error de imagen");

      return p;
    default:
      Serial.println("Error desconocido");

      return p;
  }

  // OK success!

  p = finger.image2Tz();
  switch (p) {
    case FINGERPRINT_OK:
      Serial.println("Imagen convertida");
      break;
    case FINGERPRINT_IMAGEMESS:
      Serial.println("Imagen demasiado desordenada");
      return p;
    case FINGERPRINT_PACKETRECIEVEERR:
      Serial.println("Error de comunicación");
      return p;
    case FINGERPRINT_FEATUREFAIL:
      Serial.println("No se encontraron características de huellas digitales");
      return p;
    case FINGERPRINT_INVALIDIMAGE:
      Serial.println("No se encontraron características de huellas digitales");
      return p;
    default:
      Serial.println("Error desconocido");
      return p;
  }

  // OK converted!
  p = finger.fingerFastSearch();
  if (p == FINGERPRINT_OK) {
    Serial.println("Encontró una coincidencia de impresión!");
    display.clearDisplay();                                      // Clear the display so we can refresh
 display.setTextSize(0);                                        // tamaño de letra
  display.setCursor(15, 10);                                    // (x,y)
  display.println(F("Huella Incontrada "));                     // palabras que salen en la pantalla oled
   display.setCursor(47, 20);                                   // (x,y)
   display.println(F("N "));                                    // palabras que salen en la pantalla oled
   display.setCursor(67, 20);                                   // (x,y)
    display.println(finger.fingerID);                           // palabras que salen en la pantalla oled
  display.display();                                           // Imprime todo lo que configuramos previamente
   controlador.write(90);                                      // colocar servomotor a 90 grados
     delay(4000);


/////////////////////// imagen 1 ////////////////////     

      display.clearDisplay();  
  display.setTextSize(2); 
   display.setCursor(0, 2); 
   display.println(F("abrir ")); 
display.drawBitmap(0,0,ico,160,40,WHITE);
display.display(); 
     delay(2000);

     
/////////////////////// imagen 2 ////////////////////

  display.clearDisplay();  
  display.setTextSize(2); 
   display.setCursor(0, 2);  
   display.println(F("abrir "));
display.drawBitmap(0,0,icon,160,40,WHITE);
display.display(); 
     delay(2000);

 
/////////////////////// imagen 3 ////////////////////
     
      display.clearDisplay();
  display.setTextSize(2); 
   display.setCursor(0, 2); 
   display.println(F("abrir ")); 
  display.drawBitmap(0,0,icono,160,40,WHITE);
display.display(); 
     delay(2000);


/////////////////////// imagen 4 ////////////////////

     display.clearDisplay();  
  display.setTextSize(2); 
   display.setCursor(0, 2); 
   display.println(F("abrir ")); 
display.drawBitmap(0,0,iconos,160,40,WHITE);
display.display(); 
     delay(3000);


/////////////////////// imagen 4////////////////////
     
   display.clearDisplay();  
  display.setTextSize(2); 
   display.setCursor(0, 2); 
   display.println(F("Cerrar "));
display.drawBitmap(0,0,iconos,160,40,WHITE);
display.display(); 
     delay(2000);

 
/////////////////////// imagen 3 ////////////////////
    
      display.clearDisplay(); 
  display.setTextSize(2); 
   display.setCursor(0, 2);  
   display.println(F("Cerrar "));  
  display.drawBitmap(0,0,icono,160,40,WHITE);
display.display(); 
     delay(2000);
     

/////////////////////// imagen 2 ////////////////////

      display.clearDisplay(); 
  display.setTextSize(2); 
   display.setCursor(0, 2);  
   display.println(F("Cerrar "));  
display.drawBitmap(0,0,icon,160,40,WHITE);
display.display();  
     delay(2000);


/////////////////////// imagen 1 ////////////////////

      display.clearDisplay();  
  display.setTextSize(2); 
   display.setCursor(0, 2); 
   display.println(F("Cerrar "));  
display.drawBitmap(0,0,ico,160,40,WHITE);
display.display(); 
controlador.write(0);      // colocar servomotor a 0 grados
  delay(2000);

//////////////////// fin /////////////////

  } else if (p == FINGERPRINT_PACKETRECIEVEERR) {
    Serial.println("Error de comunicación");
    return p;
  } else if (p == FINGERPRINT_NOTFOUND) {
    
    Serial.println("No encontré una coincidencia");
     display.clearDisplay();                          // limpiar pantalla
   display.setTextSize(3);                            // tamaño de letra
  display.setCursor(70, 5);                          // (x,y)
  display.println("NO");                             // palabras que salen en la pantalla oled
   display.drawBitmap(0,0,iconosh,60,30,WHITE);      // tamaño de la imagen y nombre de la imagen 
  display.display();                                 // Imprime todo lo que configuramos previamente
    return p;
    
    
  } else {
    Serial.println("Error desconocido");
    return p;
  }   

  // huella incontrada!
  Serial.print("Encontrado ID #"); Serial.print(finger.fingerID); 
 Serial.print("con la confianza de "); Serial.println(finger.confidence); 

  return finger.fingerID;
}



int getFingerprintIDez() {
  uint8_t p = finger.getImage();
  if (p != FINGERPRINT_OK)  return -1;

  p = finger.image2Tz();
  if (p != FINGERPRINT_OK)  return -1;

  p = finger.fingerFastSearch();
  if (p != FINGERPRINT_OK)  return -1;



  Serial.print("Encontrado ID #"); Serial.print(finger.fingerID); 

  Serial.print(" con la confianza de "); Serial.println(finger.confidence);
  return finger.fingerID; 
{
 getFingerprintIDez();
  delay(50);            

       finger.fingerID = -1;
     }
 }
